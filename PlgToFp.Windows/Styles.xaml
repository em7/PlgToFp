<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PlgToFp.Windows"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:shared="http://metro.mahapps.com/winfx/xaml/shared">
    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="controls:ButtonHelper.CornerRadius" Value="5"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Padding" Value="5,6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <!--BorderBrush="{TemplateBinding BorderBrush}"-->
                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (controls:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:ButtonHelper.PreserveTextCase" Value="False">
                            <Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, Converter={shared:ToUpperConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="controls:ButtonHelper.PreserveTextCase" Value="True">
                            <Setter Property="Content" TargetName="contentPresenter" Value="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource BorderBrush}"/>
                            <!--<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{DynamicResource ValidationSummaryColor2}" />
        <Setter Property="Background" Value="{DynamicResource ValidationSummaryFillColor2}" />
    </Style>

    <Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
    </Style>
</ResourceDictionary>